<div class='oai_fields'>
  <%= fi.input :base_url, as: :string, input_html: { value: importer.parser_fields['base_url'] } %>

  <%= fi.input :metadata_prefix, as: :string, hint: 'Such as oai_dc, dcterms or oai_qdc', input_html: { value: importer.parser_fields['metadata_prefix'] } %>

  <%= fi.input :set, collection: [importer.parser_fields['set']], label: 'Set (source)', selected: importer.parser_fields['set'] %>
  <button type="button" class="btn btn-default refresh-set-source">Refresh Sets</button>

  <%= fi.input :visibility,
    collection: [
      ['Public', 'open'],
      ['Private', 'restricted'],
      ['Institution', 'authenticated']
    ],x
    selected: importer.parser_fields['visibility'] || 'open',
    input_html: { class: 'form-control' }
  %>

  <% if defined?(::Hyrax) %>
    <% rights_statements = Hyrax.config.rights_statement_service_class.new %>
    <%= fi.input :rights_statement,
          collection: rights_statements.select_active_options,
          selected: importer.parser_fields['rights_statement'],
          include_blank: true,
          item_helper: rights_statements.method(:include_current_value),
          input_html: { class: 'form-control' },
          required: false
          %>
    <%= fi.input :override_rights_statement, as: :boolean, hint: 'If checked, always use the selected rights statment. If unchecked, use dc:rights from the record and only use the provided value if dc:rights is blank.', input_html: { checked: (importer.parser_fields['override_rights_statement'] == "1") } %>
  <% end %>
  <%= fi.input :thumbnail_url, required: false, as: :string, input_html: { value: importer.parser_fields['thumbnail_url'] } %>
  <div class="help-block well well-sm">
    <p>
      The Thumbnail URL allows for basic templating and substitution on any identified information in to the url. For example:
    </p>

    <p>
      http://commons.ptsem.edu/?cover=<&#37= identifier.split(':').last &#37>&size=L
    </p>

    <p>
      http://commons.ptsem.edu/?cover=<&#37= record.header.identifier.split(':').last &#37>&size=L
    </p>
  </div>
</div>
