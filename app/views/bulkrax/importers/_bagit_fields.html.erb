<div class='bagit_fields'>

  <%#= fi.input :metadata_type,
    collection:  importer.import_metadata_type,
    selected: importer.parser_fields['metadata_type'],
    include_blank: true,
    input_html: { class: 'form-control' }
    %>
  <%= fi.input :metadata_file_name, as: :string, input_html: { value: importer.parser_fields['metadata_file_name'] } %>

  <%= fi.input :metadata_format,
    collection:  importer.import_metadata_format,
    selected: importer.parser_fields['metadata_format'],
    include_blank: true,
    input_html: { class: 'form-control' }
    %>

  <%= fi.input :visibility,
    collection: [
      ['Public', 'open'],
      ['Private', 'restricted'],
      ['Institution', 'authenticated']
    ],
    selected: importer.parser_fields['visibility'] || 'open',
    input_html: { class: 'form-control' }
  %>

  <% if defined?(::Hyrax) %>
    <% rights_statements = Hyrax.config.rights_statement_service_class.new %>
    <%= fi.input :rights_statement,
          collection: rights_statements.select_active_options,
          selected: importer.parser_fields['rights_statement'],
          include_blank: true,
          item_helper: rights_statements.method(:include_current_value),
          input_html: { class: 'form-control' } ,
          required: false
          %>
    <%= fi.input :override_rights_statement, as: :boolean, hint: 'If checked, always use the selected rights statment. If unchecked, use rights or rights_statement from the record and only use the provided value if dc:rights is blank.', input_html: { checked: (importer.parser_fields['override_rights_statement'] == "1") } %>
  <% end %>
  <h4>Bag or Bags to Import:</h4>
  <p>File upload and Cloud File upload must be a Zip file containing a single BagIt Bag, or a folder containing multiple BagIt Bags.</p>
  <p>The Server Path can point to a BagIt Bag, a folder containing BagIt Bags, or a zip file containing either.</p>

  <%= fi.input :file_style, collection: ['Upload a File', 'Specify a Path on the Server', 'Add Cloud File'], as: :radio_buttons, label: false %>
  <div id='file_upload'>
    <%= fi.input 'file', as: :file, input_html: {accept: 'application/zip'} %><br />
  </div>
  <div id='file_path'>
    <%= fi.input :import_file_path, as: :string, input_html: { value: importer.parser_fields['import_file_path'] } %>
  </div>
  <div id='cloud'>
    <% if defined?(::Hyrax) && Hyrax.config.browse_everything? %>
      <%= render 'browse_everything', form: form %>
    <% end %>
  </div>
</div>
